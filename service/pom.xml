<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.adorsys.psd2</groupId>
  <artifactId>sandbox</artifactId>
  <version>1.1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Sandbox</name>
  <description>
    The PSD2 Sandbox shall offer functional usage of XS2A based on test data and comply
    with mandatory regulations of PSD2. Furthermore, it should be easy to deploy.
  </description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.18.RELEASE</version>
  </parent>

  <properties>
    <java.version>1.8</java.version>
    <lombok.version>1.16.22</lombok.version>
    <xs2a.version>1.16.1</xs2a.version>
    <cucumber.version>4.2.0</cucumber.version>
    <testcontainers.version>1.10.1</testcontainers.version>
  </properties>

  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- XS2A -->
    <dependency>
      <groupId>de.adorsys.psd2</groupId>
      <artifactId>xs2a-impl</artifactId>
      <version>${xs2a.version}</version>
    </dependency>
    <dependency>
      <groupId>de.adorsys.psd2</groupId>
      <artifactId>aspsp-profile-lib</artifactId>
      <version>${xs2a.version}</version>
    </dependency>
    <dependency>
      <groupId>de.adorsys.psd2</groupId>
      <artifactId>consent-management-lib</artifactId>
      <version>${xs2a.version}</version>
      <exclusions>
        <exclusion>
          <groupId>de.adorsys.psd2</groupId>
          <artifactId>aspsp-profile-remote</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>de.adorsys.psd2</groupId>
      <artifactId>cms-db-schema</artifactId>
      <version>${xs2a.version}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>

    <!-- Certificate -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.60</version>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>6.1.1</version>
    </dependency>

    <!-- Commons -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <!-- Cucumber -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <!--Mockito-->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.24.0</version>
      <scope>test</scope>
    </dependency>
    <!--Needed for nested junit tests-->
    <dependency>
      <groupId>com.nitorcreations</groupId>
      <artifactId>junit-runners</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <!-- Testcontainers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- enable filtering for sandbox-application.properties (replace @variable@) -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>sandbox-application.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>sandbox-application.properties</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--
          Allows us to load JDBC driver from FS. See
          https://docs.spring.io/spring-boot/docs/1.5.17.RELEASE/reference/html/build-tool-plugins-gradle-plugin.html#build-tool-plugins-gradle-configuration-layouts
          -->
          <layout>ZIP</layout>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <delimiters>
                <delimiter>@</delimiter>
              </delimiters>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <outputDirectory>${basedir}/target/classes/app</outputDirectory>
              <resources>
                <resource>
                  <directory>../ui/dist/psd2-accelerator</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>prepare-package</id>
            <phase>prepare-package</phase>
            <configuration>
              <configLocation>${project.basedir}/google-checkstyle.xml</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <failOnViolation>true</failOnViolation>
              <includeTestResources>true</includeTestResources>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.13</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Make licenses blacklistable -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.16</version>
        <executions>
          <execution>
            <goals>
              <goal>add-third-party</goal>
            </goals>
            <configuration>
              <!-- License blacklist -->
              <excludedLicenses>
                <excludedLicense>GNU General Public License, v2.0</excludedLicense>
              </excludedLicenses>
              <!-- Fail mvn build if there are some dependencies with no license -->
              <failOnMissing>false</failOnMissing>
              <!-- Fail mvn build if there are some dependencies with blacklisted license -->
              <failOnBlacklist>true</failOnBlacklist>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Create license report -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>license-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <compilerArgument>-Xlint:unchecked</compilerArgument>
        </configuration>
      </plugin>
      <!-- collect build and git information for actuator -->
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
